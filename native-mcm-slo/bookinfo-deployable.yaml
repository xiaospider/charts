---
# Source: bookinfo/charts/mysqldb/templates/secret.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-mysqldb-secret-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: mysqldb
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Secret
    metadata:
      name: mysql-credentials
      namespace: bookinfo
    type: Opaque
    data:
      rootpasswd: cGFzc3dvcmQ=
---
# Source: bookinfo/charts/reviews/templates/clusterrole.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-reviews-rbac-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: reviews-lwdc-query
    rules:
    - apiGroups:
      - ""
      - apps
      resources:
      - clusters
      - nodes
      - services
      - configmaps
      - pods
      - endpoints
      - deployments
      verbs:
      - list
      - get
    - apiGroups:
      - extensions
      attributeRestrictions: null
      resourceNames:
      - ibm-anyuid-psp
      resources:
      - podsecuritypolicies
      verbs:
      - use
    - apiGroups:
      - security.openshift.io 
      resources:
      - securitycontextconstraints 
      verbs:
      - use
      resourceNames:
      - anyuid
---
# Source: bookinfo/charts/reviews/templates/rolebinding.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-reviews-crb-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: reviews-lwdc-rolebinding
      namespace: bookinfo
    subjects:
    - kind: User
      name: system:serviceaccount:bookinfo:bookinfo-reviews
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: reviews-lwdc-query
      apiGroup: rbac.authorization.k8s.io
---
# Source: bookinfo/charts/details/templates/service-account.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-sa-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "yes"
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: bookinfo-details

---
# Source: bookinfo/charts/productpage/templates/service-account.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-productpage-sa-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: productpage
    prereq: "yes"
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: bookinfo-productpage

---
# Source: bookinfo/charts/ratings/templates/service-account.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ratings-sa-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: ratings
    prereq: "yes"
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: bookinfo-ratings

---
# Source: bookinfo/charts/reviews/templates/service-account.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-reviews-sa-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: reviews
    prereq: "yes"
spec:
  template:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: bookinfo-reviews

---
# Source: bookinfo/charts/details/templates/clusterrole.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-rbac-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "yes"
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: details-lwdc-query
    rules:
    - apiGroups:
      - ""
      - apps
      resources:
      - clusters
      - nodes
      - services
      - configmaps
      - pods
      - endpoints
      - deployments
      verbs:
      - list
      - get

---
# Source: bookinfo/charts/productpage/templates/clusterrole.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-productpage-rbac-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: productpage
    prereq: "yes"
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: productpage-lwdc-query
    rules:
    - apiGroups:
      - ""
      - apps
      resources:
      - clusters
      - nodes
      - services
      - configmaps
      - pods
      - endpoints
      - deployments
      verbs:
      - list
      - get

---
# Source: bookinfo/charts/ratings/templates/clusterrole.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ratings-rbac-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: ratings
    prereq: "yes"
spec:
  template:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: ratings-lwdc-query
    rules:
    - apiGroups:
      - ""
      - apps
      resources:
      - clusters
      - nodes
      - services
      - configmaps
      - pods
      - endpoints
      - deployments
      verbs:
      - list
      - get
---
# Source: bookinfo/charts/details/templates/rolebinding.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-crb-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: details-lwdc-rolebinding
      namespace: bookinfo
    subjects:
    - kind: User
      name: system:serviceaccount:bookinfo:bookinfo-details
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: details-lwdc-query
      apiGroup: rbac.authorization.k8s.io
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-crb2-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: details-anyuid-rolebinding
      namespace: bookinfo
    subjects:
    - kind: Group
      name: system:serviceaccounts:bookinfo
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: ibm-anyuid-clusterrole
      apiGroup: rbac.authorization.k8s.io
---
# Source: bookinfo/charts/productpage/templates/rolebinding.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-productpage-crb-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: productpage
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: productpage-lwdc-rolebinding
      namespace: bookinfo
    subjects:
    - kind: User
      name: system:serviceaccount:bookinfo:bookinfo-productpage
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: productpage-lwdc-query
      apiGroup: rbac.authorization.k8s.io
---
# Source: bookinfo/charts/ratings/templates/rolebinding.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ratings-crb-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: ratings
    prereq: "yes"
spec:
  template:
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: ratings-lwdc-rolebinding
      namespace: bookinfo
    subjects:
    - kind: User
      name: system:serviceaccount:bookinfo:bookinfo-ratings
      apiGroup: rbac.authorization.k8s.io
    roleRef:
      kind: ClusterRole
      name: ratings-lwdc-query
      apiGroup: rbac.authorization.k8s.io
---
# Source: bookinfo/charts/details/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-svc-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: details
      labels:
        app.kubernetes.io/name: details
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      type: ClusterIP
      ports:
        - port: 9080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: details
        app.kubernetes.io/instance: bookinfo-demo

---
# Source: bookinfo/charts/mysqldb/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-mysqldb-svc-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: mysqldb
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: mysqldb
      labels:
        app.kubernetes.io/name: mysqldb
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      type: ClusterIP
      ports:
        - port: 3306
          protocol: TCP
          name: tcp
      selector:
        app.kubernetes.io/name: mysqldb
        app.kubernetes.io/instance: bookinfo-demo

---
# Source: bookinfo/charts/productpage/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-productpage-svc-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: productpage
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: productpage
      labels:
        app.kubernetes.io/name: productpage
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      type: ClusterIP
      ports:
        - port: 9080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: productpage
        app.kubernetes.io/instance: bookinfo-demo

---
# Source: bookinfo/charts/ratings/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ratings-svc-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: ratings
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: ratings
      labels:
        app.kubernetes.io/name: ratings
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      type: ClusterIP
      ports:
        - port: 9080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: ratings
        app.kubernetes.io/instance: bookinfo-demo

---
# Source: bookinfo/charts/reviews/templates/service.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-reviews-svc-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: reviews
    prereq: "no"
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: reviews
      labels:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      type: ClusterIP
      ports:
        - port: 9080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: bookinfo-demo

---
# Source: bookinfo/charts/details/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-details-deploy-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: details
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bookinfo-demo-details
      labels:
        app.kubernetes.io/name: details
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: details
          app.kubernetes.io/instance: bookinfo-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: details
            app.kubernetes.io/instance: bookinfo-demo
        spec:
          serviceAccountName: bookinfo-details
          containers:
            - env:
              - name: OPENTRACING_ENABLED
                value: "true"
              - name: JAEGER_SAMPLER_TYPE
                value: "probabilistic"
              - name: JAEGER_SAMPLER_PARAM
                value: "1"
              - name: LATENCY_SAMPLER_PARAM
                value: "1"
              name: details
              image: "docker.io/dymaczew/examples-bookinfo-details-v1:latest"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: http
              readinessProbe:
                httpGet:
                  path: /health
                  port: http
              volumeMounts:
              - mountPath: /opt/ibm/apm/serverconfig
                name: global-environment
              resources:
                {}            
          volumes:
          - name: global-environment
            secret:
              defaultMode: 420
              optional: true
              secretName: icam-server-secret

---
# Source: bookinfo/charts/mysqldb/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-mysqldb-deploy-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: mysqldb
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bookinfo-demo-mysqldb
      labels:
        app.kubernetes.io/name: mysqldb
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: mysqldb
          app.kubernetes.io/instance: bookinfo-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: mysqldb
            app.kubernetes.io/instance: bookinfo-demo
        spec:
          containers:
            - name: mysqldb
              image: "docker.io/dymaczew/examples-bookinfo-mysqldb:latest"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 3306
                  protocol: TCP
              resources:
                {}                
              env:
                - name: MYSQL_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mysql-credentials
                      key: rootpasswd

---
# Source: bookinfo/charts/productpage/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-productpage-deploy-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: productpage
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bookinfo-demo-productpage
      labels:
        app.kubernetes.io/name: productpage
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: productpage
          app.kubernetes.io/instance: bookinfo-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: productpage
            app.kubernetes.io/instance: bookinfo-demo
        spec:
          serviceAccountName: bookinfo-productpage
          containers:
            - env:
              - name: OPENTRACING_ENABLED
                value: "true"
              - name: JAEGER_SAMPLER_TYPE
                value: "probabilistic"
              - name: JAEGER_SAMPLER_PARAM
                value: "1"
              - name: LATENCY_SAMPLER_PARAM
                value: "1"
              name: productpage
              image: "docker.io/dymaczew/examples-bookinfo-productpage-v1:latest"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: http
              readinessProbe:
                httpGet:
                  path: /health
                  port: http
              volumeMounts:
              - mountPath: /opt/ibm/apm/serverconfig
                name: global-environment
              resources:
                {}               
          volumes:
          - name: global-environment
            secret:
              defaultMode: 420
              optional: true
              secretName: icam-server-secret

---
# Source: bookinfo/charts/ratings/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ratings-deploy-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: ratings
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bookinfo-demo-ratings
      labels:
        app.kubernetes.io/name: ratings
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: ratings
          app.kubernetes.io/instance: bookinfo-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: ratings
            app.kubernetes.io/instance: bookinfo-demo
        spec:
          serviceAccountName: bookinfo-ratings
          containers:
            - env:
              - name: DB_TYPE
                value: mysql
              - name: MYSQL_DB_HOST
                value: mysqldb
              - name: MYSQL_DB_PORT
                value: "3306"
              - name: MYSQL_DB_USER
                value: root
              - name: MYSQL_DB_PASSWORD
                value: password
              - name: OPENTRACING_ENABLED
                value: "true"
              - name: JAEGER_SAMPLER_TYPE
                value: probabilistic
              - name: OPENTRACING_SAMPLER
                value: "1"
              - name: LATENCY_SAMPLER_PARAM
                value: "1"
              name: ratings
              image: "docker.io/dymaczew/examples-bookinfo-ratings-v2:latest"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: http
              readinessProbe:
                httpGet:
                  path: /health
                  port: http
              volumeMounts:
              - mountPath: /opt/ibm/apm/serverconfig
                name: global-environment
              resources:
                {}                
          volumes:
          - name: global-environment
            secret:
              defaultMode: 420
              optional: true
              secretName: icam-server-secret

---
# Source: bookinfo/charts/reviews/templates/deployment.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-reviews-deploy-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: reviews
    prereq: "no"
spec:
  template:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: bookinfo-demo-reviews
      labels:
        app.kubernetes.io/name: reviews
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: reviews
          app.kubernetes.io/instance: bookinfo-demo
      template:
        metadata:
          labels:
            app.kubernetes.io/name: reviews
            app.kubernetes.io/instance: bookinfo-demo
        spec:
          serviceAccountName: bookinfo-reviews
          containers:
            - env:
              - name: OPENTRACING_ENABLED
                value: "true"
              - name: JAEGER_SAMPLER_TYPE
                value: "probabilistic"
              - name: JAEGER_SAMPLER_PARAM
                value: "1"
              - name: LATENCY_SAMPLER_PARAM
                value: "1"
              name: reviews
              image: "docker.io/dymaczew/examples-bookinfo-reviews-v3:latest"
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: http
                initialDelaySeconds: 120
              failureThreshold: 6
              readinessProbe:
                httpGet:
                  path: /health
                  port: http
                initialDelaySeconds: 120
              failureThreshold: 10
              volumeMounts:
              - mountPath: /opt/ibm/apm/serverconfig
                name: global-environment
              resources:
                {}                
          securityContext:
            runAsUser: 1001        
          volumes:
          - name: global-environment
            secret:
              defaultMode: 420
              optional: true
              secretName: icam-server-secret

---
# Source: bookinfo/templates/ingress.yaml
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  annotations:
    app.ibm.com/is-local-deployable: "false"
  name: bookinfo-ingress-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: bookinfo
    prereq: "no"
spec:
  template:
    apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: bookinfo-demo
      labels:
        app.kubernetes.io/name: bookinfo
        app.kubernetes.io/instance: bookinfo-demo
    spec:
      rules:
        - host: bam-all.fyre.ibm.com
          http:
            paths:
              - path: /
                backend:
                  serviceName: productpage
                  servicePort: 9080
----
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: bookinfo-synthetic-deployable
  namespace: bookinfo-source
  labels:
    appname: bookinfo-demo
    release: bookinfo-demo
    component: bookinfo
    monitoring: "yes"
spec:
  template:
    apiVersion: monitoring.ibm.com/v1alpha1
    kind: Synthetic
    metadata:
      name: {{ template "bookinfochannel.name" . }}-ingress
      labels: 
        app: {{ template "bookinfochannel.name" . }}
        service: productpage
    spec:
      interval: 1m
      locations: 
        ids: ["KSN_Location_Default"]
      tests: 
        - testName: Homepageload
          http:
            url: /productpage
        - testName: login
          http:
            url: /login
        - testName: login
          http:
            url: /login
        - testName: productapi
          http:
            url: /api/v1/products                 